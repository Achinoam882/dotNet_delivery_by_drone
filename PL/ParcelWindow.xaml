<Window x:Class="PL.ParcelWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL"
        mc:Ignorable="d"
           xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanMinimize"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="ParcelWindow" Height="500" Width="800">

    <Window.Resources>

        <Style TargetType="Grid">
            <Setter Property="Background" Value="AliceBlue"/>
        </Style>





        <Style TargetType="Button" >
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Background" Value="#FF216882"/>
            <Setter Property="BorderBrush" Value="#FF216882"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="HP Simplified"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="20"/>
                </Style>
            </Style.Resources>
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#FF216882"/>
            <Setter Property="FontFamily" Value="HP Simplified"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="Foreground" Value="#FF216882"/>
        </Style>
    </Window.Resources>
    <Grid x:Name="MainGrid"  >

        <Grid x:Name="AddParcelGrid" Visibility="Hidden" >
            <Grid.Background >
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFD28D87" Offset="1"/>
                    <GradientStop Color="#FFCF888B" Offset="1"/>
                    <GradientStop Color="LightBlue" Offset="1"/>
                    <GradientStop Color="#7F886992" Offset="0.215"/>
                </LinearGradientBrush>
            </Grid.Background>
            <TextBox  x:Name="TargetIdTextBox" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Top" materialDesign:TextFieldAssist.HasClearButton="True" Height="43" Margin="188,60,440,0"  materialDesign:HintAssist.Foreground="#FF216882"
  materialDesign:TextFieldAssist.UnderlineBrush="#FF216882">
                <materialDesign:HintAssist.Hint>
                    <StackPanel Orientation="Horizontal" Margin="-2 0 0 0">
                        <materialDesign:PackIcon Kind="SmartCardOutline"  Height="29" Width="23"/>
                        <TextBlock Text="  TARGET'S ID" Width="90" VerticalAlignment="Bottom" Height="15"  />
                    </StackPanel>
                </materialDesign:HintAssist.Hint>
            </TextBox>
            <TextBox  x:Name="TargetNameTextBox"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Top" materialDesign:TextFieldAssist.HasClearButton="True" Height="43" Margin="188,120,440,0"  materialDesign:HintAssist.Foreground="#FF216882"
  materialDesign:TextFieldAssist.UnderlineBrush="#FF216882">
                <materialDesign:HintAssist.Hint>
                    <StackPanel Orientation="Horizontal" Margin="-2 0 0 0">
                        <materialDesign:PackIcon Kind="RenameBox"  Height="29" Width="23"/>
                        <TextBlock Text="  TARGET'S NAME" Width="120" VerticalAlignment="Bottom" Height="15"  />
                    </StackPanel>
                </materialDesign:HintAssist.Hint>
            </TextBox>
            <TextBox  x:Name="SenderIdTextBox"    Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Top" materialDesign:TextFieldAssist.HasClearButton="True" Height="43" Margin="188,190,440,0"  materialDesign:HintAssist.Foreground="#FF216882"
  materialDesign:TextFieldAssist.UnderlineBrush="#FF216882">
                <materialDesign:HintAssist.Hint>
                    <StackPanel Orientation="Horizontal" Margin="-2 0 0 0">
                        <materialDesign:PackIcon Kind="SmartCardOutline"  Height="29" Width="23"/>
                        <TextBlock Text="  SENDER'S ID" Width="90" VerticalAlignment="Bottom" Height="15"  />
                    </StackPanel>
                </materialDesign:HintAssist.Hint>
            </TextBox>
            <TextBox  x:Name="SenderNameTextBox"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Top" materialDesign:TextFieldAssist.HasClearButton="True" Height="43" Margin="188,260,440,0"  materialDesign:HintAssist.Foreground="#FF216882"
  materialDesign:TextFieldAssist.UnderlineBrush="#FF216882">
                <materialDesign:HintAssist.Hint>
                    <StackPanel Orientation="Horizontal" Margin="-2 0 0 0">
                        <materialDesign:PackIcon Kind="RenameBox"  Height="26" Width="20"/>
                        <TextBlock Text="  SENDER'S NAME" Width="120" VerticalAlignment="Bottom" Height="15"  />
                    </StackPanel>
                </materialDesign:HintAssist.Hint>
            </TextBox>
            <!--<ComboBox x:Name="WeightComboBox" Style="{StaticResource MaterialDesignFilledComboBox}"
    IsEnabled="{Binding Path=IsChecked, ElementName=FilledComboBoxEnabledCheckBox}"
    materialDesign:HintAssist.Hint=" PARCEL'S WEIGHT "  Width="150" Height="50" Margin="188,308,462,126">
            </ComboBox>
            <ComboBox x:Name="PriortryComboBox" Style="{StaticResource MaterialDesignFilledComboBox}"
    IsEnabled="{Binding Path=IsChecked, ElementName=FilledComboBoxEnabledCheckBox}"
    materialDesign:HintAssist.Hint=" PARCEL'S PRIORTRY"  Width="150" Height="50" Margin="188,363,462,71">
            </ComboBox>-->


            <ComboBox x:Name="WeightComboBox"  materialDesign:HintAssist.Hint=" PARCEL'S WEIGHT" Width="160" Height="50"   HorizontalAlignment="Left" Margin="188,404,0,30" />
            <ComboBox x:Name="PriortryComboBox"  materialDesign:HintAssist.Hint=" PARCEL'S PRIORTRY"  HorizontalAlignment="Left" Margin="188,331,0,103"  Width="160" Height="50"  />

            <Button  x:Name="Add"  Click="Add_Click" Content="OK" HorizontalAlignment="Left" Margin="475,161,0,0" VerticalAlignment="Top" Height="72" Width="168"  Style="{StaticResource MaterialDesignFlatButton}"/>

            <Button  x:Name="cancel"  Click="cancel_Click" Content="CANCEL" HorizontalAlignment="Left" Margin="475,233,0,0" VerticalAlignment="Top" Height="72" Width="168"  Style="{StaticResource MaterialDesignFlatButton}" RenderTransformOrigin="0.019,0.812"/>
            <Button  x:Name="BackWindow" Style="{StaticResource MaterialDesignIconButton}"/>
            <materialDesign:PackIcon Kind="ArrowBack" Height="48" Width="88" Margin="0,10,0,0" MouseDoubleClick="BackWindow_Click"  />



























            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="200*"/>
                <ColumnDefinition Width="200*"/>
                <ColumnDefinition Width="200*"/>
                <ColumnDefinition Width="200*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="cancel" Content="Cancel"  HorizontalAlignment="Left" Width="140" Click="cancel_Click" Margin="28,67,0,324" />
            <Button x:Name="Add" Content="Add"  HorizontalAlignment="Center"  VerticalAlignment="Top" Height="46" Width="145"   Click="Add_Click" Margin="0,122,0,0" />
            <Grid Name="SecGrid" HorizontalAlignment="Stretch" Height="300" Grid.Column="1" 
VerticalAlignment="Stretch" Width="auto">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>

                </Grid.RowDefinitions >
                <Label x:Name="IdTtargetLabel" Content=" Target Id:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="0"/>
                <Label x:Name="NameTargetLabel" Content="Target Name:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="1" />
                <Label x:Name="IdSenderLabel" Content=" Sender Id:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="2"/>
                <Label x:Name="NameSenderLabel" Content="Target Name:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="3" />
                <Label x:Name="LongitudeLable" Content="Weight:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="4" />
                <Label x:Name="LatitudeLable" Content="Priority:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="5" />


            </Grid>
            <Grid Name="ThirdGrid" HorizontalAlignment="Stretch" Height="300" Grid.Column="2" 
VerticalAlignment="Stretch" Width="auto">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions >
                -->
            <!--<TextBox x:Name="IdTextBox"   HorizontalAlignment="Left" Margin="0,0,0,0" Text="" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="190"  />-->
            <!--
                <TextBox x:Name="TargetIdTextBox" HorizontalAlignment="Left" Margin="0,0,0,0" Grid.Row="0" Text="" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="190" Grid.RowSpan="1" />
                <TextBox x:Name="TargetNameTextBox" Grid.Row="1" HorizontalAlignment="Left"  VerticalAlignment="Stretch" Margin="0,0,0,0" Width="190"/>
                <TextBox x:Name="SenderIdTextBox" Text="" HorizontalAlignment="Left" Margin="0,0,0,0" Grid.Row="2"  TextWrapping="Wrap" VerticalAlignment="Stretch" Width="190" Grid.RowSpan="1" />
                <TextBox x:Name="SenderNameTextBox" Grid.Row="3" HorizontalAlignment="Left"  VerticalAlignment="Stretch" Margin="0,0,0,0" Width="190"/>
                <ComboBox x:Name="WeightComboBox" Grid.Row="4" HorizontalAlignment="Left"  VerticalAlignment="Stretch" Margin="0,0,0,0" Width="190"/>
                <ComboBox x:Name="PriortryComboBox" Grid.Row="5"   HorizontalAlignment="Left" Margin="0,0,0,0" Text=""  VerticalAlignment="Stretch" Width="190"   />

            </Grid>-->

        </Grid>
        <Grid x:Name="UpdateGrid" RenderTransformOrigin="0.589,0.447" Visibility="Hidden"  >
            <Grid.Background >
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFD28D87" Offset="1"/>
                    <GradientStop Color="#FFCF888B" Offset="1"/>
                    <GradientStop Color="LightBlue" Offset="1"/>
                    <GradientStop Color="#7F886992" Offset="0.215"/>
                </LinearGradientBrush>
            </Grid.Background>
            <StackPanel  >
                <Grid Height="30">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="20 0" >
                        <Button x:Name="Closeee" Background="{x:Null}" BorderBrush="{x:Null}"   VerticalAlignment="Center" Click="Close_Click" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"  >
                            <materialDesign:PackIcon Kind="Power" Foreground="#FFA2A2A2" Width="25" Height="25" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Height="40" >

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <RadioButton  Style="{StaticResource MaterialDesignTabRadioButton}"
    Margin="4" Uid="0" Width="25" Content="HOME" Height="26" Background="{x:Null}" BorderBrush="{x:Null}"  Foreground="#FF216882"/>
                        <RadioButton x:Name="Exit" Uid="1" Width="25" Height="30"  Content="BACK" Background="{x:Null}" Style="{StaticResource MaterialDesignTabRadioButton}" Foreground="#FF216882" BorderBrush="{x:Null}"  />
                        <RadioButton x:Name="deleteParcel"  Uid="2" Width="85" Height="30"  Content="DELETE" Background="{x:Null}" Style="{StaticResource MaterialDesignTabRadioButton}" BorderBrush="{x:Null}" Foreground="#FF216882"   Click="deleteParcel_Click"/>
                        <RadioButton x:Name="PickUp" Uid="3" Width="135" Height="30"  Content="PICK UP PARCEL" Background="{x:Null}" Style="{StaticResource MaterialDesignTabRadioButton}" BorderBrush="{x:Null}" Foreground="#FF216882"   Click="PickUp_Click"/>
                        <RadioButton x:Name="Delivery" Uid="4" IsEnabled="False" Width="150" Height="30"  Content="DELIVER PARCEL" Background="{x:Null}" Style="{StaticResource MaterialDesignTabRadioButton}" BorderBrush="{x:Null}" Foreground="#FF216882"  Click="Delivery_Click"/>
                    </StackPanel>
                </Grid>
            </StackPanel>

            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="250*"/>
                <ColumnDefinition Width="550*"/>
            </Grid.ColumnDefinitions>-->

            <Grid Name="ParcelGrid"  Width="auto" Margin="0,73,436,0">
                <Grid.Background >
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFD28D87" Offset="1"/>
                        <GradientStop Color="#FFCF888B" Offset="1"/>
                        <GradientStop Color="LightBlue" Offset="1"/>
                        <GradientStop Color="#7F886992" Offset="0.215"/>
                    </LinearGradientBrush>

                </Grid.Background>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200*"/>
                    <ColumnDefinition Width="200*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>

                </Grid.RowDefinitions >
                <Label x:Name="IdLabel" Content="Id:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="0"/>
                <Label x:Name="SenderLabel" Content=" Sender:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="1" />
                <Label x:Name="ReceiverLabel" Content="Receiver:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="2" />
                <Label x:Name="WeightLabel" Content="Weight:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="3" />
                <Label x:Name="PriorityLabel" Content="Priority:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="4" />
                <Label x:Name="DroneAtParcelLabel" Content="Drone Assign To Parcel:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="5" />
                <Label x:Name="ScheduledLabel" Content="Scheduled:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="6" />
                <Label x:Name="PickUpLabel" Content="PickUp:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="7" />
                <Label x:Name="DeliveredLabel" Content="Delivered:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="8" />
                <Label x:Name="RequestedLabel" Content="Requested:" Grid.Column="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="9" />

                <TextBlock x:Name="IdTextBox1" Grid.Column="1" Text="{Binding Path=Id}"  HorizontalAlignment="Center" TextWrapping="Wrap" Width="125"/>
                <TextBox x:Name="WeightTextBox1"  Grid.Column="1"  Text="{Binding Path=Weight}" IsReadOnly="True" BorderBrush="{x:Null}" HorizontalAlignment="Center" Grid.Row="3"  TextWrapping="Wrap" Width="125" Height="35" VerticalAlignment="Center" />
                <TextBox x:Name="SenderTextBox" Text="{Binding Mode=OneWay,Path=Sender}" Grid.Column="1"     IsReadOnly="True" BorderBrush="{x:Null}" HorizontalAlignment="Center" Grid.Row="1"  TextWrapping="Wrap" Width="182" Height="35" VerticalAlignment="Center" MouseDoubleClick="SenderDetails_Click"/>
                <TextBox x:Name="RecieverTextBox" Text="{Binding Mode=OneWay,Path=Receiving}" Grid.Column="1"   VerticalScrollBarVisibility="Auto"  IsReadOnly="True" BorderBrush="{x:Null}" HorizontalAlignment="Center" Grid.Row="2"  TextWrapping="Wrap" Width="125" Height="35" VerticalAlignment="Center" MouseDoubleClick="ReceiverDetails_Click" />
                <TextBox x:Name="DroneParcelTextBox" Text="{Binding Mode=OneWay,Path=DroneAtParcel}" Grid.Column="1"    VerticalScrollBarVisibility="Auto" IsReadOnly="True" BorderBrush="{x:Null}" HorizontalAlignment="Center" Grid.Row="5"  TextWrapping="Wrap" Width="125" Height="35" VerticalAlignment="Center" MouseDoubleClick="DroneParcel_Click"  />
                <TextBox x:Name="PriorityTextBox1"  Grid.Column="1"  Text="{Binding Path=Priority}" BorderBrush="{x:Null}" Grid.Row="4"   HorizontalAlignment="Left"  VerticalAlignment="Stretch" Margin="0,0,0,0" Width="110"/>
                <TextBox x:Name="ScheduledTextBox1"  Grid.Column="1"  HorizontalAlignment="Left" IsReadOnly="True" BorderBrush="{x:Null}" Margin="0,0,0,0" Grid.Row="6" Text="{Binding Path=Scheduled}" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="110" Grid.RowSpan="1" />
                <TextBox x:Name="DeliveredTextBox1"  Grid.Column="1"  HorizontalAlignment="Left" IsReadOnly="True" BorderBrush="{x:Null}" Margin="0,0,0,0" Grid.Row="8" Text="{Binding Path=Delivered}" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="110" Grid.RowSpan="1" />
                <TextBox x:Name="PickUpTextBox1"  Grid.Column="1"  HorizontalAlignment="Left" IsReadOnly="True" BorderBrush="{x:Null}" Margin="0,0,0,0" Grid.Row="7" Text="{Binding Path=PickUp}" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="110" Grid.RowSpan="1" />
                <TextBox x:Name="RequestedTextBox1"  Grid.Column="1"  HorizontalAlignment="Left" IsReadOnly="True" BorderBrush="{x:Null}" Margin="0,0,0,0" Grid.Row="9" Text="{Binding Path=Requested}" TextWrapping="Wrap" VerticalAlignment="Stretch" Width="110" Grid.RowSpan="1" />



            </Grid>



            <!--<Button x:Name="deleteParcel" Content="Remove" Grid.Column="1"  HorizontalAlignment="Left" Margin="124,306,0,0" VerticalAlignment="Top" Height="32" Width="75" Click="deleteParcel_Click"  />
            <Button  x:Name="Delivery" Content="Delivery" IsEnabled="False" Grid.Column="1" HorizontalAlignment="Left" Margin="275,322,0,0" VerticalAlignment="Top" Width="70" Click="Delivery_Click" />
            <Button x:Name="PickUp"   Content="Pick Up" Grid.Column="1" HorizontalAlignment="Left" Margin="275,292,0,0" VerticalAlignment="Top" Width="70" Click="PickUp_Click"/>-->




        </Grid>

    </Grid>

</Window>

